package com.ewerp.mud.sessions.terminal;

import com.ewerp.mud.commands.ICommand;
import com.ewerp.mud.commands.IMessage;
import com.ewerp.mud.plugins.ILifecycleListener;
import com.ewerp.mud.plugins.IPluginManager;
import com.ewerp.mud.sessions.ISession;

import java.net.Socket;

/**
 * Copyright 2012 Curtis Boyden
 * <p/>
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * <p/>
 * http://www.apache.org/licenses/LICENSE-2.0
 * <p/>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * The {@link TerminalSession} wraps a socket connection and provides an interface between a Terminal
 * connection and the {@link ICommand} / {@link IMessage} system.
 *
 * {@link TerminalSession}s are generated by the {@link TerminalSessionFactory} when a new socket
 * connection is detected.
 */
public class TerminalSession implements ISession, ILifecycleListener {

    public TerminalSession(Socket socket) {

    }

    @Override
    public void setPluginManager(IPluginManager pluginManager) {
    }

    // Close socket connection gracefully per a standard terminal connection
    @Override
    public void shutdown() {
    }

    /**
     * Pass the message through a chain of linkable interpreters
     * @param message {@link IMessage} (generated by a commands) to be interpreted for the session client
     */
    @Override
    public void processMessage(IMessage message) {
    }

    /**
     * Not used
     */
    @Override
    public void init() {
    }

    /**
     * Executed by the {@link com.ewerp.mud.sessions.ISessionFactory} that has created this
     * to let it know that everything is ready and it may begin communicating with the Socket
     */
    @Override
    public void start() {
    }

    /**
     * Executed by the owning {@link com.ewerp.mud.sessions.ISessionManager} to indicate that the session
     * is to close itself. Notify the client if necessary, close the connection and release resources.
     */
    @Override
    public void stop() {
    }
}
